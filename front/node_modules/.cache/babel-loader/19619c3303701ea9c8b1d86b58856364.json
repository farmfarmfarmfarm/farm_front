{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yun70\\\\Desktop\\\\farm_front\\\\front\\\\src\\\\Reco.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reco() {\n  _s();\n\n  const chart1 = useRef(null);\n  const chart2 = useRef(null);\n  const chart3 = useRef(null);\n  const chartData = [{\n    charNo: chart1,\n    percent: 80,\n    bgColor: '#F5D042'\n  }, {\n    charNo: chart2,\n    percent: 40,\n    bgColor: '#0A174E'\n  }, {\n    charNo: chart3,\n    percent: 30,\n    bgColor: '#EC8B5E'\n  }];\n  useEffect(() => {\n    charData.map(row => {\n      makeChart(row.percent, row.chartNo, row.bgColor);\n    });\n  }, []);\n  let i = 1;\n\n  const makeChart = (percent, className, color) => {\n    let func1 = setInterval(function () {\n      if (i < percent) {\n        color1(i, classname, colorname);\n        i++;\n      } else {\n        clearInterval(func1);\n      }\n    }, 10);\n  };\n\n  function color1(i, classname, colorname) {\n    classname.css({\n      \"background\": \"conic-gradient(\" + colorname + \" 0% \" + i + \"%, #dedede \" + i + \"% 100%)\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"pie-chart pie-chart1\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"center\",\n        children: \"80%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reco, \"6qMP44OoSgQyLhtyr1bJAAAxxV4=\");\n\n_c = Reco;\nexport default Reco;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reco\");","map":{"version":3,"sources":["C:/Users/yun70/Desktop/farm_front/front/src/Reco.js"],"names":["React","useState","useEffect","useRef","Reco","chart1","chart2","chart3","chartData","charNo","percent","bgColor","charData","map","row","makeChart","chartNo","i","className","color","func1","setInterval","color1","classname","colorname","clearInterval","css"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,WAAP;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,QAAMC,MAAM,GAAGF,MAAM,CAAC,IAAD,CAArB;AACA,QAAMG,MAAM,GAAGH,MAAM,CAAC,IAAD,CAArB;AACA,QAAMI,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;AAEA,QAAMK,SAAS,GAAG,CAAC;AACjBC,IAAAA,MAAM,EAAEJ,MADS;AAEjBK,IAAAA,OAAO,EAAE,EAFQ;AAGjBC,IAAAA,OAAO,EAAE;AAHQ,GAAD,EAKlB;AACEF,IAAAA,MAAM,EAAEH,MADV;AAEEI,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,OAAO,EAAE;AAHX,GALkB,EAUlB;AACEF,IAAAA,MAAM,EAAEF,MADV;AAEEG,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAVkB,CAAlB;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACC,GAAT,CAAcC,GAAD,IAAS;AACpBC,MAAAA,SAAS,CAACD,GAAG,CAACJ,OAAL,EAAcI,GAAG,CAACE,OAAlB,EAA2BF,GAAG,CAACH,OAA/B,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAOA,MAAIM,CAAC,GAAG,CAAR;;AACA,QAAMF,SAAS,GAAG,CAACL,OAAD,EAAUQ,SAAV,EAAqBC,KAArB,KAA+B;AAC/C,QAAIC,KAAK,GAAGC,WAAW,CAAC,YAAU;AAChC,UAAGJ,CAAC,GAACP,OAAL,EAAa;AACTY,QAAAA,MAAM,CAACL,CAAD,EAAGM,SAAH,EAAaC,SAAb,CAAN;AACAP,QAAAA,CAAC;AACJ,OAHD,MAGM;AACJQ,QAAAA,aAAa,CAACL,KAAD,CAAb;AACD;AACF,KAPsB,EAOrB,EAPqB,CAAvB;AAQD,GATD;;AAYA,WAASE,MAAT,CAAgBL,CAAhB,EAAmBM,SAAnB,EAA6BC,SAA7B,EAAuC;AACnCD,IAAAA,SAAS,CAACG,GAAV,CAAc;AACV,oBAAa,oBAAkBF,SAAlB,GAA4B,MAA5B,GAAmCP,CAAnC,GAAqC,aAArC,GAAmDA,CAAnD,GAAqD;AADxD,KAAd;AAGH;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,sBAAX;AAAA,6BACE;AAAM,QAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAvDQb,I;;KAAAA,I;AAyDT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction Reco() {\r\n  const chart1 = useRef(null);\r\n  const chart2 = useRef(null);\r\n  const chart3 = useRef(null);\r\n\r\n  const chartData = [{\r\n    charNo: chart1, \r\n    percent: 80, \r\n    bgColor: '#F5D042'\r\n  }, \r\n  {\r\n    charNo: chart2, \r\n    percent: 40, \r\n    bgColor: '#0A174E'\r\n  }, \r\n  {\r\n    charNo: chart3, \r\n    percent: 30, \r\n    bgColor: '#EC8B5E'\r\n  }, \r\n]\r\n\r\n  useEffect(() => {\r\n    charData.map((row) => {\r\n      makeChart(row.percent, row.chartNo, row.bgColor);\r\n    })\r\n  }, []);\r\n\r\n\r\n  let i = 1;\r\n  const makeChart = (percent, className, color) => {\r\n    let func1 = setInterval(function(){\r\n      if(i<percent){\r\n          color1(i,classname,colorname);\r\n          i++;\r\n      } else{\r\n        clearInterval(func1);\r\n      }\r\n    },10);\r\n  }\r\n\r\n\r\n  function color1(i, classname,colorname){\r\n      classname.css({\r\n          \"background\":\"conic-gradient(\"+colorname+\" 0% \"+i+\"%, #dedede \"+i+\"% 100%)\"\r\n      });\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div class=\"pie-chart pie-chart1\" >\r\n        <span class=\"center\">80%</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Reco;"]},"metadata":{},"sourceType":"module"}