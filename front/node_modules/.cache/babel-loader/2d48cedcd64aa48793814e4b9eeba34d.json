{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yun70\\\\Desktop\\\\farm_front\\\\front\\\\src\\\\Chart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chart() {\n  _s();\n\n  const chart1 = useRef(null);\n  const chart2 = useRef(null);\n  const chart3 = useRef(null);\n  const chartData = [{\n    charNo: chart1,\n    percent: 80,\n    bgColor: '#F5D042'\n  }, {\n    charNo: chart2,\n    percent: 40,\n    bgColor: '#0A174E'\n  }, {\n    charNo: chart3,\n    percent: 30,\n    bgColor: '#EC8B5E'\n  }];\n  useEffect(() => {\n    chartData.map(row => {\n      makeChart(row.percent, row.chartNo, row.bgColor);\n    });\n  }, []);\n  let i = 1;\n\n  const makeChart = (percent, className, color) => {\n    let func1 = setInterval(function () {\n      if (i < percent) {\n        if (className.current) {\n          color1(i, className, color);\n          i++;\n        } else {\n          return;\n        }\n      } else {\n        clearInterval(func1);\n      }\n    }, 10);\n  };\n\n  function color1(i, className, color) {\n    className.css({\n      \"background\": \"conic-gradient(\" + color + \" 0% \" + i + \"%, #dedede \" + i + \"% 100%)\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chart1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", chartData[0].percent, \" % \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chart2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", chartData[1].percent, \" % \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chart2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", chartData[2].percent, \" % \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chart, \"6qMP44OoSgQyLhtyr1bJAAAxxV4=\");\n\n_c = Chart;\n;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/yun70/Desktop/farm_front/front/src/Chart.js"],"names":["React","useState","useEffect","useRef","Chart","chart1","chart2","chart3","chartData","charNo","percent","bgColor","map","row","makeChart","chartNo","i","className","color","func1","setInterval","current","color1","clearInterval","css"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAO,WAAP;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAMC,MAAM,GAAGF,MAAM,CAAC,IAAD,CAArB;AACA,QAAMG,MAAM,GAAGH,MAAM,CAAC,IAAD,CAArB;AACA,QAAMI,MAAM,GAAGJ,MAAM,CAAC,IAAD,CAArB;AAEA,QAAMK,SAAS,GAAG,CAAC;AACjBC,IAAAA,MAAM,EAAEJ,MADS;AAEjBK,IAAAA,OAAO,EAAE,EAFQ;AAGjBC,IAAAA,OAAO,EAAE;AAHQ,GAAD,EAKlB;AACEF,IAAAA,MAAM,EAAEH,MADV;AAEEI,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,OAAO,EAAE;AAHX,GALkB,EAUlB;AACEF,IAAAA,MAAM,EAAEF,MADV;AAEEG,IAAAA,OAAO,EAAE,EAFX;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAVkB,CAAlB;AAiBAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAACI,GAAV,CAAeC,GAAD,IAAS;AACrBC,MAAAA,SAAS,CAACD,GAAG,CAACH,OAAL,EAAcG,GAAG,CAACE,OAAlB,EAA2BF,GAAG,CAACF,OAA/B,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAOA,MAAIK,CAAC,GAAG,CAAR;;AACA,QAAMF,SAAS,GAAG,CAACJ,OAAD,EAAUO,SAAV,EAAqBC,KAArB,KAA+B;AAC/C,QAAIC,KAAK,GAAGC,WAAW,CAAC,YAAU;AAChC,UAAGJ,CAAC,GAACN,OAAL,EAAa;AACX,YAAIO,SAAS,CAACI,OAAd,EAAsB;AACpBC,UAAAA,MAAM,CAACN,CAAD,EAAGC,SAAH,EAAaC,KAAb,CAAN;AACAF,UAAAA,CAAC;AACF,SAHD,MAGO;AACL;AACD;AACF,OAPD,MAOM;AACJO,QAAAA,aAAa,CAACJ,KAAD,CAAb;AACD;AACF,KAXsB,EAWrB,EAXqB,CAAvB;AAYD,GAbD;;AAgBA,WAASG,MAAT,CAAgBN,CAAhB,EAAmBC,SAAnB,EAA6BC,KAA7B,EAAmC;AAC/BD,IAAAA,SAAS,CAACO,GAAV,CAAc;AACV,oBAAa,oBAAkBN,KAAlB,GAAwB,MAAxB,GAA+BF,CAA/B,GAAiC,aAAjC,GAA+CA,CAA/C,GAAiD;AADpD,KAAd;AAGH;;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,GAAG,EAAIX,MAAZ;AAAA,6BACE;AAAA,wBAAQG,SAAS,CAAC,CAAD,CAAT,CAAaE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,GAAG,EAAIJ,MAAZ;AAAA,6BACE;AAAA,wBAAQE,SAAS,CAAC,CAAD,CAAT,CAAaE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAOE;AAAK,MAAA,GAAG,EAAIJ,MAAZ;AAAA,6BACE;AAAA,wBAAQE,SAAS,CAAC,CAAD,CAAT,CAAaE,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAjEQN,K;;KAAAA,K;AAiER;AAED,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './App.css';\r\n\r\nfunction Chart() {\r\n  const chart1 = useRef(null);\r\n  const chart2 = useRef(null);\r\n  const chart3 = useRef(null);\r\n\r\n  const chartData = [{\r\n    charNo: chart1, \r\n    percent: 80, \r\n    bgColor: '#F5D042'\r\n  }, \r\n  {\r\n    charNo: chart2, \r\n    percent: 40, \r\n    bgColor: '#0A174E'\r\n  }, \r\n  {\r\n    charNo: chart3, \r\n    percent: 30, \r\n    bgColor: '#EC8B5E'\r\n  }, \r\n]\r\n\r\n  useEffect(() => {\r\n    chartData.map((row) => {\r\n      makeChart(row.percent, row.chartNo, row.bgColor);\r\n    })\r\n  }, []);\r\n\r\n\r\n  let i = 1;\r\n  const makeChart = (percent, className, color) => {\r\n    let func1 = setInterval(function(){\r\n      if(i<percent){\r\n        if (className.current){\r\n          color1(i,className,color);\r\n          i++;\r\n        } else {\r\n          return;\r\n        }\r\n      } else{\r\n        clearInterval(func1);\r\n      }\r\n    },10);\r\n  }\r\n\r\n\r\n  function color1(i, className,color){\r\n      className.css({\r\n          \"background\":\"conic-gradient(\"+color+\" 0% \"+i+\"%, #dedede \"+i+\"% 100%)\"\r\n      });\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div ref = {chart1}>\r\n        <div> { chartData[0].percent} % </div>\r\n      </div>\r\n      <div ref = {chart2}>\r\n        <div> { chartData[1].percent} % </div>\r\n      </div>\r\n      <div ref = {chart2}>\r\n        <div> { chartData[2].percent} % </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}